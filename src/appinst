#!/usr/bin/bash

basedir="$PWD"
destdir="$HOME/.local/bin/"
url=""
filepath=""
opt_force=0
opt_newname=""
opt_try=0

ask_confirm()
{
    while true; do
        read -p "$1" ret
        case $ret in
            [Yy]*)
                return 0; break
            ;;
            [Nn]*)
                return 1; break
            ;;
            *)
                return 0; break
            ;;
        esac
    done
}

error_exit()
{
    test "$1" == "" || printf "$1\n"; echo "abort..."; exit 1
    echo "*** usage :"
    echo "appinst \"https://url/to/file\""
    echo "abort..."
    exit 1
}

download_file()
{
    which wget 1>/dev/null || error_exit "*** wget is not installed"
    local tempdir=$(mktemp -d -t appinst-XXXX)
    echo "cmd  : wget -P \"$tempdir\" \"$1\""
    wget -P "$tempdir" "$1" || error_exit "*** wget returnded an error"
    for file in "$tempdir"/*; do
        test "$filepath" == "" || error_exit "*** multiple files error"
        test -f "$file" && filepath="$file"
    done
    test -f "$filepath" || error_exit "*** download error"
    echo "file : $filepath"
}

download_torrent()
{
    which aria2c 1>/dev/null || error_exit "*** aria2 is not installed"
    local tempdir=$(mktemp -d -t appinst-XXXX)
    echo "cmd  : aria2c -d \"$tempdir\" --seed-time=0 \"$1\""
    aria2c -d "$tempdir" --seed-time=0 "$1" || error_exit "*** aria2c returnded an error"
    for file in "$tempdir"/*; do
        if [[ $file == *".torrent" ]]; then
            continue
        elif [[ "$filepath" != "" ]]; then
            error_exit "*** multiple files error"
        elif [[ -f "$file" ]]; then
            filepath="$file"
        fi
    done
    test -f "$filepath" || error_exit "*** download error"
    echo "file : $filepath"
}

test_file()
{
    filetype=$(file -b "$1")
    echo "type : $filetype"
    if [[ $opt_force != 1 ]] \
    && [[ $filetype != "ELF"* ]] \
    && [[ $filetype != "Bourne-Again shell script"* ]] \
    && [[ $filetype != "Perl script"* ]] \
    && [[ $filetype != "Python script"* ]] \
    && [[ $filetype != "Ruby script"* ]]; then
        error_exit "*** wrong file type"
    fi
}

rename_file()
{
    test "$1" != "" || return
    newpath="$(dirname $filepath)/$1"
    echo "cmd  : mv $filepath $newpath"
    mv "$filepath" "$newpath"
    filepath="$newpath"
}

move_file()
{
    test -f "$1" || error_exit "invalid file"
    test -d "$2" || mkdir -p "$2"
    if [[ $opt_try -eq 0 ]]; then
        ask_confirm "Do you wish to install $1 ? [Y/n] " || error_exit "*** cancelled by user"
        echo "cmd  : chmod +x ${1}"
        chmod +x "$1"
        echo "cmd  : mv ${1} ${2}"
        mv "$1" "$2"
    else
        echo "try  : chmod +x ${1}"
        echo "try  : mv ${1} ${2}"
    fi
}

while (($#)); do
    case "$1" in
        -force)
            opt_force=1
        ;;
        -o)
            test $# -gt 1 || error_exit "*** missing option"
            shift
            opt_newname="$1"
        ;;
        -try)
            opt_try=1
        ;;
        *)
            test "$url" == "" || error_exit "*** invalid option"
            url="$1"
        ;;
    esac
    shift
done

if [[ "$EUID" == 0 ]]; then
    destdir="/usr/local/bin/"
fi

if [[ $url != "http"* ]]; then
    error_exit "*** wrong url"
fi

if [[ $url == *".torrent" ]]; then
    download_torrent "$url"
else
    download_file "$url"
fi

rename_file "$opt_newname"
test_file "$filepath"
move_file "$filepath" "$destdir"


